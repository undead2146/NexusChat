<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net9.0-android;net9.0-ios;net9.0-maccatalyst</TargetFrameworks>
		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net9.0-windows10.0.19041.0</TargetFrameworks>
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net9.0-tizen</TargetFrameworks> -->

		<!-- Note for MacCatalyst:
		The default runtime is maccatalyst-x64, except in Release config, in which case the default is maccatalyst-x64;maccatalyst-arm64.
		When specifying both architectures, use the plural <RuntimeIdentifiers> instead of the singular <RuntimeIdentifier>.
		The Mac App Store will NOT accept apps with ONLY maccatalyst-arm64 indicated;
		either BOTH runtimes must be indicated or ONLY macatalyst-x64. -->
		<!-- For example: <RuntimeIdentifiers>maccatalyst-x64;maccatalyst-arm64</RuntimeIdentifiers> -->

		<OutputType>Exe</OutputType>
		<RootNamespace>NexusChat</RootNamespace>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>

		<!-- Display name -->
		<ApplicationTitle>NexusChat</ApplicationTitle>

		<!-- App Identifier -->
		<ApplicationId>com.companyname.nexuschat</ApplicationId>

		<!-- Versions -->
		<ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
		<ApplicationVersion>1</ApplicationVersion>

		<!-- To develop, package, and publish an app to the Microsoft Store, see: https://aka.ms/MauiTemplateUnpackaged -->
		<WindowsPackageType>None</WindowsPackageType>

		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">15.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">15.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
		<UserSecretsId>c95916de-52ba-4c8a-8302-46b9d0466c68</UserSecretsId>
		<EnableDefaultXamlItems>true</EnableDefaultXamlItems>
		<EnableDefaultEmbeddedResourceItems>true</EnableDefaultEmbeddedResourceItems>
		<EnableCompileTimeXaml>true</EnableCompileTimeXaml>
		<XamlRuntime>WinUI</XamlRuntime>

		<!-- Temporary fix for Resizetizer error -->
		<ErrorOnDuplicatePublishOutputFiles>false</ErrorOnDuplicatePublishOutputFiles>
		<ResizetizerSkipVerification>true</ResizetizerSkipVerification>
	</PropertyGroup>

	<!-- Add this PropertyGroup to fix the Resizetizer issue -->
	<PropertyGroup>
		<ErrorOnDuplicatePublishOutputFiles>false</ErrorOnDuplicatePublishOutputFiles>
		<ResizetizerSkipVerification>true</ResizetizerSkipVerification>
	</PropertyGroup>

	<!-- Force the XAML compiler to regenerate all files -->
	<ItemGroup>
		<!-- App Icon -->
		<MauiIcon Include="Resources\AppIcon\appicon.svg" ForegroundFile="Resources\AppIcon\appiconfg.svg" Color="#512BD4" />

		<!-- Splash Screen -->
		<MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#512BD4" BaseSize="128,128" />

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />
		<MauiImage Update="Resources\Images\dotnet_bot.png" Resize="True" BaseSize="300,185" />

		<!-- Custom Fonts -->
		<MauiFont Include="Resources\Fonts\*" />

		<!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<!-- If you have an ItemGroup for MauiImage or MauiFont resources that might be causing issues -->
	<ItemGroup>
		<!-- Temporarily comment out problematic resources if needed
		<MauiImage Include="Resources\Images\**\*" />
		<MauiFont Include="Resources\Fonts\*" />
		-->
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Azure.Core" Version="1.45.0" />
		<PackageReference Include="BCrypt.Net-Next" Version="4.0.3" />
		<PackageReference Include="CommunityToolkit.Maui" Version="9.1.1" />
		<PackageReference Include="CommunityToolkit.Mvvm" Version="8.4.0" />
		<PackageReference Include="DotNetEnv" Version="3.1.1" />
		<PackageReference Include="Microsoft.Extensions.Caching.Memory" Version="9.0.3" />
		<PackageReference Include="Microsoft.Extensions.Configuration.UserSecrets" Version="9.0.0" />
		<PackageReference Include="Microsoft.Maui.Controls" Version="9.0.30" />
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="9.0.0" />
		<PackageReference Include="RestSharp" Version="112.1.0" />
		<PackageReference Include="sqlite-net-pcl" Version="1.9.172" />
		<PackageReference Include="SQLiteNetExtensions" Version="2.1.0" />
		<PackageReference Include="Bogus" Version="35.5.0" />
		<PackageReference Include="CommunityToolkit.Maui.Markup" Version="5.1.0" />
		<PackageReference Include="SQLiteNetExtensions.Async" Version="2.1.0" />
	</ItemGroup>

	<ItemGroup>
		<Compile Update="Views\Controls\Accessibilities.xaml.cs">
			<DependentUpon>Accessibilities.xaml</DependentUpon>
		</Compile>
		<Compile Update="Views\Controls\Buttons.xaml.cs">
			<DependentUpon>Buttons.xaml</DependentUpon>
		</Compile>
		<Compile Update="Views\Controls\ChatComponents.xaml.cs">
			<DependentUpon>ChatComponents.xaml</DependentUpon>
		</Compile>
		<Compile Update="Views\Controls\ColorPalette.xaml.cs">
			<DependentUpon>ColorPalette.xaml</DependentUpon>
		</Compile>
		<Compile Update="Views\Controls\FormComponents.xaml.cs">
			<DependentUpon>FormComponents.xaml</DependentUpon>
		</Compile>
		<Compile Update="Views\Controls\FunctionalColors.xaml.cs">
			<DependentUpon>FunctionalColors.xaml</DependentUpon>
		</Compile>
		<Compile Update="Views\Controls\InputControls.xaml.cs">
			<DependentUpon>InputControls.xaml</DependentUpon>
		</Compile>
		<Compile Update="Views\Controls\LayoutComponents.xaml.cs">
			<DependentUpon>LayoutComponents.xaml</DependentUpon>
		</Compile>
		<Compile Update="Views\Controls\StatusIndicators.xaml.cs">
			<DependentUpon>StatusIndicators.xaml</DependentUpon>
		</Compile>
		<Compile Update="Views\Controls\Typography.xaml.cs">
			<DependentUpon>Typography.xaml</DependentUpon>
		</Compile>
	</ItemGroup>

	<ItemGroup>
		<None Remove="Local\**" />
		<Content Remove="Local\**" />
		<EmbeddedResource Remove="Local\**" />
		<Compile Remove="Local\**" />
		<MauiXaml Remove="Local\**" />
		<MauiCss Remove="Local\**" />
		<MauiAsset Remove="Local\**" />
	</ItemGroup>

</Project>
